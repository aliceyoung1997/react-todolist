{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["TodoForm","addTodo","useState","value","setValue","className","onSubmit","e","preventDefault","id","type","placeholder","onChange","target","Todos","todo","deleteTodo","isDone","toggleIsDone","style","textDecoration","content","onClick","Buttons","clearAll","filterAll","filterActive","filterCompleted","App","todos","setTodos","filter","setFilter","handleDeleteTodo","handleToggleIsDone","map","newTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecf4e5a3.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\nfunction TodoForm({ addTodo }) {\n  const [value, setValue] = useState('')\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (!value) return\n    addTodo(id, value)\n    setValue('')\n    id++\n  }\n  return (\n    <form className='todo__input' onSubmit={handleSubmit}>\n      <input\n        className='todo__input-area'\n        type='text'\n        placeholder='add some tasks!'\n        onChange={(e) => { setValue(e.target.value) }}\n        value={value} />\n      <button\n        className='input__btn'>add</button>\n    </form>\n\n  )\n}\n\nfunction Todos({ todo, id, isDone, deleteTodo, toggleIsDone }) {\n  return (\n    <div className='todo__list'>\n      <div\n        className='todo__content'\n        style={\n          { textDecoration: todo.isDone ? 'line-through' : 'none' }} >\n        {todo.content}\n      </div>\n      <div className='todo__btn'>\n        <button\n          className={todo.isDone ? 'undone-btn' : 'done-btn'}\n          onClick={() => toggleIsDone(id)}>\n          {todo.isDone ? 'undone' : 'done'}\n        </button>\n        <button\n          className='delete-btn'\n          onClick={() => deleteTodo(id)}>delete</button>\n      </div>\n    </div >\n  )\n}\n\nfunction Buttons({ clearAll, filterAll, filterActive, filterCompleted }) {\n  return (\n    <div className='filter__btns'>\n      <button\n        className='show-all-btn'\n        onClick={() => filterAll()}>\n        all\n      </button>\n      <button\n        className='active-btn'\n        onClick={() => filterActive()}>\n        active\n      </button>\n      <button\n        className='completed-btn'\n        onClick={() => filterCompleted()}>\n        completed\n      </button>\n      <button\n        className='clear-btn'\n        onClick={() => clearAll()}>\n        clear all\n      </button>\n    </div>\n  )\n}\n\nlet id = 1\nfunction App() {\n  const [todos, setTodos] = useState([])\n  const [filter, setFilter] = useState('all')\n  const addTodo = (id, content) => {\n    const newTodos = [...todos, { id, content, isDone: false }]\n    setTodos(newTodos)\n  }\n  const handleDeleteTodo = (id) => {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n  const handleToggleIsDone = (id) => {\n    setTodos(todos.map(todo => {\n      if (todo.id !== id) return todo\n      return {\n        ...todo,\n        isDone: !todo.isDone\n      }\n    }))\n  }\n  const handleClearAll = () => {\n    setTodos([])\n  }\n  const handleFilterAll = () => {\n    setFilter('all')\n  }\n  const handleFilterActive = () => {\n    setFilter('undone')\n  }\n  const handleFilterCompleted = () => {\n    setFilter('done')\n  }\n\n\n  return (\n    <div className='wrapper'>\n      <h1 className='title'>TO-DO LIST</h1>\n      <TodoForm addTodo={addTodo} />\n      {\n        todos\n          .filter(todo => {\n            if (filter === 'all') return todo\n            if (filter === 'done') return todo.isDone\n            return !todo.isDone\n          })\n          .map(todo =>\n            < Todos\n              key={todo.id}\n              todo={todo}\n              id={todo.id}\n              isDone={todo.isDone}\n              deleteTodo={handleDeleteTodo}\n              toggleIsDone={handleToggleIsDone}\n            />)\n      }\n      <Buttons\n        clearAll={handleClearAll}\n        filterAll={handleFilterAll}\n        filterActive={handleFilterActive}\n        filterCompleted={handleFilterCompleted}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}